{"version":3,"sources":["components/PersonalForm.js","components/PersonalView.js","components/Personal.js","components/EducationForm.js","components/EducationView.js","components/Education.js","components/ExpirienceForm.js","components/ExpirienceView.js","components/Expirience.js","App.js","reportWebVitals.js","index.js"],"names":["PersonalForm","this","props","fullName","address","phone","email","handleChange","handleSubmit","Form","onSubmit","Group","controlId","Label","Control","defaultValue","onChange","name","type","placeholder","required","Button","className","Component","PersonalView","toggleShowForm","Card","Body","onClick","Personal","e","setState","target","value","preventDefault","showForm","state","bind","EducationForm","schoolName","titleOfStudy","dateOfStudy","index","EducationView","deleteEducationView","Education","item","id","addEducation","nextProps","deleteEducation","ExpirienceForm","companyName","positionTitle","mainTasks","dateOfWork","ExpirienceView","deleteExpirienceView","Expirience","addExpirience","deleteExpirience","App","educationList","addEmptyEducation","emptyItem","uniqid","concat","i","newEducationList","splice","console","log","expirienceList","addEmptyExpirience","newExpirienceList","renderedEducationList","map","renderedExpirienceList","Container","Navbar","Row","Col","md","span","offset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0e0fc6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default class PersonalForm extends Component {\r\n  render() {\r\n    const { fullName, address, phone, email, handleChange, handleSubmit } =\r\n      this.props;\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Full Name</Form.Label>\r\n          <Form.Control\r\n            defaultValue={fullName}\r\n            onChange={handleChange}\r\n            name=\"fullName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter full name\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            defaultValue={address}\r\n            onChange={handleChange}\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"phoneNumber\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          <Form.Control\r\n            defaultValue={phone}\r\n            onChange={handleChange}\r\n            name=\"phone\"\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"emailAddress\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            defaultValue={email}\r\n            onChange={handleChange}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"float-right m-2\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default class PersonalView extends Component {\r\n  render() {\r\n    const { fullName, address, phone, email, toggleShowForm } = this.props;\r\n    return (\r\n      <Card className=\"mb-3\">\r\n        <Card.Body>\r\n          <h4>Full name</h4>\r\n          <p>{fullName}</p>\r\n          <h4>Address</h4>\r\n          <p>{address}</p>\r\n          <h4>Phone Number</h4>\r\n          <p>{phone}</p>\r\n          <h4>Email</h4>\r\n          <p>{email}</p>\r\n          <div>\r\n            <Button\r\n              onClick={toggleShowForm}\r\n              type=\"submit\"\r\n              className=\"float-right m-2\"\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PersonalForm from \"./PersonalForm\";\r\nimport PersonalView from \"./PersonalView\";\r\n\r\nexport default class Personal extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fullName: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      showForm: true,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.toggleShowForm();\r\n  };\r\n\r\n  toggleShowForm = () => {\r\n    const { showForm } = this.state;\r\n    this.setState({ showForm: !showForm });\r\n  };\r\n  render() {\r\n    const { fullName, address, phone, email, showForm } = this.state;\r\n\r\n    return showForm ? (\r\n      <PersonalForm\r\n        fullName={fullName}\r\n        address={address}\r\n        phone={phone}\r\n        email={email}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    ) : (\r\n      <PersonalView\r\n        fullName={fullName}\r\n        address={address}\r\n        phone={phone}\r\n        email={email}\r\n        toggleShowForm={this.toggleShowForm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default class EducationForm extends Component {\r\n  render() {\r\n    const {\r\n      schoolName,\r\n      titleOfStudy,\r\n      dateOfStudy,\r\n      handleSubmit,\r\n      handleChange,\r\n      index,\r\n    } = this.props;\r\n    return (\r\n      <Form\r\n        onSubmit={(e) => {\r\n          handleSubmit(e, index);\r\n        }}\r\n      >\r\n        <Form.Group controlId=\"school\">\r\n          <Form.Label>School name</Form.Label>\r\n          <Form.Control\r\n            defaultValue={schoolName}\r\n            onChange={handleChange}\r\n            name=\"schoolName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter school name\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"titleOfStudy\">\r\n          <Form.Label>Title of study</Form.Label>\r\n          <Form.Control\r\n            defaultValue={titleOfStudy}\r\n            onChange={handleChange}\r\n            name=\"titleOfStudy\"\r\n            type=\"text\"\r\n            placeholder=\"Enter title of your study\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"dateOfStudy\">\r\n          <Form.Label>Date of study</Form.Label>\r\n          <Form.Control\r\n            defaultValue={dateOfStudy}\r\n            onChange={handleChange}\r\n            name=\"dateOfStudy\"\r\n            type=\"date\"\r\n            placeholder=\"Enter date of your study\"\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"float-right m-2\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default class EducationView extends Component {\r\n  render() {\r\n    const {\r\n      schoolName,\r\n      titleOfStudy,\r\n      dateOfStudy,\r\n      toggleShowForm,\r\n      deleteEducationView,\r\n      index,\r\n    } = this.props;\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <h4>School name</h4>\r\n          <p>{schoolName}</p>\r\n          <h4>Title of study</h4>\r\n          <p>{titleOfStudy}</p>\r\n          <h4>Date of study</h4>\r\n          <p>{dateOfStudy}</p>\r\n          <div>\r\n            <Button\r\n              onClick={toggleShowForm}\r\n              type=\"submit\"\r\n              className=\"float-right m-2\"\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={function () {\r\n                deleteEducationView(index);\r\n              }}\r\n              type=\"submit\"\r\n              className=\"float-right m-2\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","//to do: on render, set education state to app/educationList object values.\r\n\r\nimport React, { Component } from \"react\";\r\nimport EducationForm from \"./EducationForm\";\r\nimport EducationView from \"./EducationView\";\r\n\r\nexport default class Education extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      schoolName: props.item.schoolName,\r\n      titleOfStudy: props.item.titleOfStudy,\r\n      dateOfStudy: props.item.dateOfStudy,\r\n      id: props.item.id,\r\n      index: props.index,\r\n      showForm: true,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //recives props after initial state setting and updates state\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      schoolName: nextProps.item.schoolName,\r\n      titleOfStudy: nextProps.item.titleOfStudy,\r\n      dateOfStudy: nextProps.item.dateOfStudy,\r\n      id: nextProps.item.id,\r\n      index: nextProps.index,\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //calls addEducation in app.js, passes item and index to edit educationList\r\n  handleSubmit = (e, index) => {\r\n    e.preventDefault();\r\n    this.toggleShowForm();\r\n    let item = {\r\n      schoolName: this.state.schoolName,\r\n      titleOfStudy: this.state.titleOfStudy,\r\n      dateOfStudy: this.state.dateOfStudy,\r\n      id: this.state.id,\r\n    };\r\n    this.props.addEducation(item, index);\r\n  };\r\n\r\n  toggleShowForm = () => {\r\n    const { showForm } = this.state;\r\n    this.setState({ showForm: !showForm });\r\n  };\r\n\r\n  render() {\r\n    const { showForm, schoolName, titleOfStudy, dateOfStudy, index } =\r\n      this.state;\r\n    const { deleteEducation } = this.props;\r\n\r\n    return showForm ? (\r\n      <EducationForm\r\n        schoolName={schoolName}\r\n        titleOfStudy={titleOfStudy}\r\n        dateOfStudy={dateOfStudy}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        toggleShowForm={this.toggleShowForm}\r\n        index={index}\r\n      />\r\n    ) : (\r\n      <EducationView\r\n        schoolName={schoolName}\r\n        titleOfStudy={titleOfStudy}\r\n        dateOfStudy={dateOfStudy}\r\n        toggleShowForm={this.toggleShowForm}\r\n        deleteEducationView={deleteEducation}\r\n        index={index}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default class ExpirienceForm extends Component {\r\n  render() {\r\n    const {\r\n      companyName,\r\n      positionTitle,\r\n      mainTasks,\r\n      dateOfWork,\r\n      handleSubmit,\r\n      handleChange,\r\n      index,\r\n    } = this.props;\r\n    return (\r\n      <Form\r\n        onSubmit={(e) => {\r\n          handleSubmit(e, index);\r\n        }}\r\n      >\r\n        <Form.Group controlId=\"company\">\r\n          <Form.Label>Company name</Form.Label>\r\n          <Form.Control\r\n            defaultValue={companyName}\r\n            onChange={handleChange}\r\n            name=\"companyName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter company name\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"positionTitle\">\r\n          <Form.Label>Position Title</Form.Label>\r\n          <Form.Control\r\n            defaultValue={positionTitle}\r\n            onChange={handleChange}\r\n            name=\"positionTitle\"\r\n            type=\"text\"\r\n            placeholder=\"Enter title of your position\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"mainTasks\">\r\n          <Form.Label>Main Tasks</Form.Label>\r\n          <Form.Control\r\n            defaultValue={mainTasks}\r\n            onChange={handleChange}\r\n            name=\"mainTasks\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Main Tasks\"\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"dateOfWork\">\r\n          <Form.Label>Date of Work</Form.Label>\r\n          <Form.Control\r\n            defaultValue={dateOfWork}\r\n            onChange={handleChange}\r\n            name=\"dateOfWork\"\r\n            type=\"date\"\r\n            placeholder=\"Enter date of your work\"\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"float-right m-2\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default class ExpirienceView extends Component {\r\n  render() {\r\n    const {\r\n      companyName,\r\n      positionTitle,\r\n      mainTasks,\r\n      dateOfWork,\r\n      toggleShowForm,\r\n      deleteExpirienceView,\r\n      index,\r\n    } = this.props;\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <h4>Name of Company</h4>\r\n          <p>{companyName}</p>\r\n          <h4>Position Title</h4>\r\n          <p>{positionTitle}</p>\r\n          <h4>Main Taks at Work</h4>\r\n          <p>{mainTasks}</p>\r\n          <h4>Date of Work</h4>\r\n          <p>{dateOfWork}</p>\r\n          <div>\r\n            <Button\r\n              onClick={toggleShowForm}\r\n              type=\"submit\"\r\n              className=\"float-right m-2\"\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              onClick={function () {\r\n                deleteExpirienceView(index);\r\n              }}\r\n              type=\"submit\"\r\n              className=\"float-right m-2\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ExpirienceForm from \"./ExpirienceForm\";\r\nimport ExpirienceView from \"./ExpirienceView\";\r\n\r\nexport default class Expirience extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      companyName: props.item.companyName,\r\n      positionTitle: props.item.positionTitle,\r\n      mainTasks: props.item.mainTasks,\r\n      dateOfWork: props.item.dateOfWork,\r\n      id: props.item.id,\r\n      index: props.index,\r\n      showForm: true,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //recives props after initial state setting and updates state\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      companyName: nextProps.item.companyName,\r\n      positionTitle: nextProps.item.positionTitle,\r\n      mainTasks: nextProps.item.mainTasks,\r\n      dateOfWork: nextProps.item.dateOfWork,\r\n      index: nextProps.index,\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //calls addEducation in app.js, passes item and index to edit educationList\r\n  handleSubmit = (e, index) => {\r\n    e.preventDefault();\r\n    this.toggleShowForm();\r\n    let item = {\r\n      companyName: this.state.companyName,\r\n      positionTitle: this.state.positionTitle,\r\n      mainTasks: this.state.mainTasks,\r\n      dateOfWork: this.state.dateOfWork,\r\n      id: this.state.id,\r\n    };\r\n    this.props.addExpirience(item, index);\r\n  };\r\n\r\n  toggleShowForm = () => {\r\n    const { showForm } = this.state;\r\n    this.setState({ showForm: !showForm });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      showForm,\r\n      companyName,\r\n      positionTitle,\r\n      mainTasks,\r\n      dateOfWork,\r\n      index,\r\n    } = this.state;\r\n    const { deleteExpirience } = this.props;\r\n\r\n    return showForm ? (\r\n      <ExpirienceForm\r\n        companyName={companyName}\r\n        positionTitle={positionTitle}\r\n        mainTasks={mainTasks}\r\n        dateOfWork={dateOfWork}\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        toggleShowForm={this.toggleShowForm}\r\n        index={index}\r\n      />\r\n    ) : (\r\n      <ExpirienceView\r\n        companyName={companyName}\r\n        positionTitle={positionTitle}\r\n        mainTasks={mainTasks}\r\n        dateOfWork={dateOfWork}\r\n        toggleShowForm={this.toggleShowForm}\r\n        deleteExpirienceView={deleteExpirience}\r\n        index={index}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Personal from \"./components/Personal\";\r\nimport Education from \"./components/Education\";\r\nimport Expirience from \"./components/Expirience\";\r\nimport { Container, Row, Col, Navbar, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      educationList: [],\r\n      expirienceList: [],\r\n    };\r\n\r\n    this.addEducation = this.addEducation.bind(this);\r\n    this.addEmptyEducation = this.addEmptyEducation.bind(this);\r\n    this.deleteEducation = this.deleteEducation.bind(this);\r\n    this.deleteExpirience = this.deleteExpirience.bind(this);\r\n  }\r\n\r\n  //education section------------------------------------\r\n\r\n  //edits empty education\r\n  addEducation = (item, index) => {\r\n    this.setState((state) => {\r\n      const educationList = this.state.educationList;\r\n      educationList[index] = item;\r\n      return { educationList };\r\n    });\r\n  };\r\n\r\n  //adds empty object to educationList, with uniqid\r\n  addEmptyEducation = () => {\r\n    let emptyItem = {\r\n      schoolName: \"\",\r\n      titleOfStudy: \"\",\r\n      dateOfStudy: \"\",\r\n      id: uniqid(),\r\n    };\r\n    this.setState({\r\n      educationList: this.state.educationList.concat(emptyItem),\r\n    });\r\n  };\r\n\r\n  deleteEducation = (i) => {\r\n    const newEducationList = this.state.educationList;\r\n    newEducationList.splice(i, 1);\r\n    this.setState({ educationList: newEducationList });\r\n\r\n    console.log(this.state.educationList);\r\n  };\r\n\r\n  //expirience section----------------------------------\r\n\r\n  //edits empty expirience\r\n  addExpirience = (item, index) => {\r\n    this.setState((state) => {\r\n      const expirienceList = this.state.expirienceList;\r\n      expirienceList[index] = item;\r\n      return { expirienceList };\r\n    });\r\n\r\n    console.log(\"expirience state after submiting\", this.state.expirienceList);\r\n  };\r\n\r\n  //adds empty object to expirienceList, with uniqid\r\n  addEmptyExpirience = () => {\r\n    let emptyItem = {\r\n      companyName: \"\",\r\n      positionTitle: \"\",\r\n      mainTasks: \"\",\r\n      dateOfWork: \"\",\r\n      id: uniqid(),\r\n    };\r\n    this.setState({\r\n      expirienceList: this.state.expirienceList.concat(emptyItem),\r\n    });\r\n  };\r\n\r\n  deleteExpirience = (i) => {\r\n    const newExpirienceList = this.state.expirienceList;\r\n    newExpirienceList.splice(i, 1);\r\n    this.setState({ expirienceList: newExpirienceList });\r\n\r\n    console.log(this.state.expirienceList);\r\n  };\r\n\r\n  render() {\r\n    //Education section\r\n    const renderedEducationList = this.state.educationList.map(\r\n      (item, index) => (\r\n        <Education\r\n          key={index}\r\n          deleteEducation={this.deleteEducation}\r\n          addEducation={this.addEducation}\r\n          item={item}\r\n          index={index}\r\n        />\r\n      )\r\n    );\r\n\r\n    //Expirience section\r\n    const renderedExpirienceList = this.state.expirienceList.map(\r\n      (item, index) => (\r\n        <Expirience\r\n          key={index}\r\n          deleteExpirience={this.deleteExpirience}\r\n          addExpirience={this.addExpirience}\r\n          item={item}\r\n          index={index}\r\n        />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Container>\r\n        <Navbar className=\"justify-content-center\">\r\n          <h1>CV Maker</h1>\r\n        </Navbar>\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <h2>Personal Info</h2>\r\n            <Personal />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <h2>Education</h2>\r\n            {renderedEducationList}\r\n            <Button\r\n              onClick={this.addEmptyEducation}\r\n              className=\"float-right m-4\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <h2>Practical Expirience</h2>\r\n            {renderedExpirienceList}\r\n            <Button\r\n              onClick={this.addEmptyExpirience}\r\n              className=\"float-right m-4\"\r\n            >\r\n              Add\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}